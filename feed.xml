<?xml version="1.0" encoding="UTF-16"?>
<!--This file generated by build script at ./Build.hs in solutions repository-->
<rss version="2.0">
  <channel>
    <title>Justin Le's Advent of Code 2020 Reflections</title>
    <description>Reflections for my Advent of Code solutions as I try to solve them all in fun ways using Haskell!</description>
    <link>https://github.com/mstksg/advent-of-code-2020/blob/master/reflections.md</link>
    <copyright>Copyright 2020 Justin Le</copyright>
    <language>en-us</language>
    <lastBuildDate>Tue,  1 Dec 2020 00:42:35 EST</lastBuildDate>
    <managingEditor>justin@jle.im</managingEditor>
    <pubDate>Tue,  1 Dec 2020 00:42:35 EST</pubDate>
    <webMaster>justin@jle.im</webMaster>
    <generator>Shake + Template</generator>
    <item>
      <title>Day 1</title>
      <description>&lt;h2 id=&quot;day-1&quot;&gt;Day 1&lt;/h2&gt;
&lt;!--
This section is generated and compiled by the build script at ./Build.hs from
the file `./reflections/day01.md`.  If you want to edit this, edit
that file instead!
--&gt;
&lt;p&gt;&lt;em&gt;&lt;a href=&quot;https://adventofcode.com/2020/day/1&quot;&gt;Prompt&lt;/a&gt;&lt;/em&gt; / &lt;em&gt;&lt;a href=&quot;https://github.com/mstksg/advent-of-code-2020/blob/master/src/AOC/Challenge/Day01.hs&quot;&gt;Code&lt;/a&gt;&lt;/em&gt; / &lt;em&gt;&lt;a href=&quot;https://mstksg.github.io/advent-of-code-2020/src/AOC.Challenge.Day01.html&quot;&gt;Rendered&lt;/a&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Day 1 is usually a fun one to do in Haskell! :D Today we can do something nice with &lt;code&gt;tails&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; id=&quot;cb1&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb1-1&quot;&gt;&lt;a href=&quot;#cb1-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;ghci&lt;span class=&quot;op&quot;&gt;&amp;gt;&lt;/span&gt; tails [&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;,&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;dv&quot;&gt;3&lt;/span&gt;,&lt;span class=&quot;dv&quot;&gt;4&lt;/span&gt;]&lt;/span&gt;
&lt;span id=&quot;cb1-2&quot;&gt;&lt;a href=&quot;#cb1-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;[&lt;span class=&quot;dv&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt;[&lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;,&lt;span class=&quot;dv&quot;&gt;3&lt;/span&gt;,&lt;span class=&quot;dv&quot;&gt;4&lt;/span&gt;], &lt;span class=&quot;dv&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt;[&lt;span class=&quot;dv&quot;&gt;3&lt;/span&gt;,&lt;span class=&quot;dv&quot;&gt;4&lt;/span&gt;], &lt;span class=&quot;dv&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt;[&lt;span class=&quot;dv&quot;&gt;4&lt;/span&gt;], &lt;span class=&quot;dv&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt;[]]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It lets you separate out each item in a list with the list of items after it.&lt;/p&gt;
&lt;p&gt;Part 1 then becomes, with the list monad to simulate searches:&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; id=&quot;cb2&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb2-1&quot;&gt;&lt;a href=&quot;#cb2-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;findPair ::&lt;/span&gt; [&lt;span class=&quot;dt&quot;&gt;Int&lt;/span&gt;] &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Maybe&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Int&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-2&quot;&gt;&lt;a href=&quot;#cb2-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;findPair xs &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; listToMaybe &lt;span class=&quot;op&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;do&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb2-3&quot;&gt;&lt;a href=&quot;#cb2-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    x&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt;ys &lt;span class=&quot;ot&quot;&gt;&amp;lt;-&lt;/span&gt; tails xs&lt;/span&gt;
&lt;span id=&quot;cb2-4&quot;&gt;&lt;a href=&quot;#cb2-4&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    y    &lt;span class=&quot;ot&quot;&gt;&amp;lt;-&lt;/span&gt; ys&lt;/span&gt;
&lt;span id=&quot;cb2-5&quot;&gt;&lt;a href=&quot;#cb2-5&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    guard (x &lt;span class=&quot;op&quot;&gt;+&lt;/span&gt; y &lt;span class=&quot;op&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;2020&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&quot;cb2-6&quot;&gt;&lt;a href=&quot;#cb2-6&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;fu&quot;&gt;pure&lt;/span&gt; (x&lt;span class=&quot;op&quot;&gt;*&lt;/span&gt;y)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And Part 2 is not much more complicated:&lt;/p&gt;
&lt;div class=&quot;sourceCode&quot; id=&quot;cb3&quot;&gt;&lt;pre class=&quot;sourceCode haskell&quot;&gt;&lt;code class=&quot;sourceCode haskell&quot;&gt;&lt;span id=&quot;cb3-1&quot;&gt;&lt;a href=&quot;#cb3-1&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;&lt;span class=&quot;ot&quot;&gt;findTriple ::&lt;/span&gt; [&lt;span class=&quot;dt&quot;&gt;Int&lt;/span&gt;] &lt;span class=&quot;ot&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Maybe&lt;/span&gt; &lt;span class=&quot;dt&quot;&gt;Int&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-2&quot;&gt;&lt;a href=&quot;#cb3-2&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;findTriple xs &lt;span class=&quot;ot&quot;&gt;=&lt;/span&gt; listToMaybe &lt;span class=&quot;op&quot;&gt;$&lt;/span&gt; &lt;span class=&quot;kw&quot;&gt;do&lt;/span&gt;&lt;/span&gt;
&lt;span id=&quot;cb3-3&quot;&gt;&lt;a href=&quot;#cb3-3&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    x&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt;ys &lt;span class=&quot;ot&quot;&gt;&amp;lt;-&lt;/span&gt; tails xs&lt;/span&gt;
&lt;span id=&quot;cb3-4&quot;&gt;&lt;a href=&quot;#cb3-4&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    y&lt;span class=&quot;op&quot;&gt;:&lt;/span&gt;zs &lt;span class=&quot;ot&quot;&gt;&amp;lt;-&lt;/span&gt; tails ys&lt;/span&gt;
&lt;span id=&quot;cb3-5&quot;&gt;&lt;a href=&quot;#cb3-5&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    z    &lt;span class=&quot;ot&quot;&gt;&amp;lt;-&lt;/span&gt; zs&lt;/span&gt;
&lt;span id=&quot;cb3-6&quot;&gt;&lt;a href=&quot;#cb3-6&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    guard (x &lt;span class=&quot;op&quot;&gt;+&lt;/span&gt; y &lt;span class=&quot;op&quot;&gt;+&lt;/span&gt; z &lt;span class=&quot;op&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;dv&quot;&gt;2020&lt;/span&gt;)&lt;/span&gt;
&lt;span id=&quot;cb3-7&quot;&gt;&lt;a href=&quot;#cb3-7&quot; aria-hidden=&quot;true&quot;&gt;&lt;/a&gt;    &lt;span class=&quot;fu&quot;&gt;pure&lt;/span&gt; (x&lt;span class=&quot;op&quot;&gt;*&lt;/span&gt;y&lt;span class=&quot;op&quot;&gt;*&lt;/span&gt;z)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The simpler way would be to just &lt;code&gt;do x &amp;lt;- xs; y &amp;lt;- xs; z &amp;lt;- xs; ...&lt;/code&gt;, and either hope that you don’t accidentally select a duplicate, or validate that you didn’t draw any duplicates. But it’s always fun to do selecty constrainty searches when you have the opportunity :D&lt;/p&gt;
&lt;h3 id=&quot;day-1-benchmarks&quot;&gt;Day 1 Benchmarks&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;&amp;gt;&amp;gt; Day 01a
benchmarking...
time                 35.01 μs   (35.00 μs .. 35.02 μs)
                     1.000 R²   (1.000 R² .. 1.000 R²)
mean                 35.04 μs   (35.03 μs .. 35.05 μs)
std dev              18.87 ns   (14.79 ns .. 27.67 ns)

* parsing and formatting times excluded

&amp;gt;&amp;gt; Day 01b
benchmarking...
time                 1.771 ms   (1.767 ms .. 1.775 ms)
                     1.000 R²   (1.000 R² .. 1.000 R²)
mean                 1.752 ms   (1.748 ms .. 1.758 ms)
std dev              16.20 μs   (15.16 μs .. 17.06 μs)

* parsing and formatting times excluded&lt;/code&gt;&lt;/pre&gt;
</description>
      <link>https://github.com/mstksg/advent-of-code-2020/blob/master/reflections.md#day-1</link>
      <pubDate>Tue,  1 Dec 2020 01:00:00 EST</pubDate>
    </item>

  </channel>
</rss>
